q()
library(phytools)
phytools?
?phytools
phytools(help)
help(phytools)
trees <- list()
births <- vector()
Fractions <- vector()
for (i in 1:100) {
births[i] <- 10
Fractions[i] <- 50
pbtree(speciation rate = 10, extinction rate = 10/50, tips =100)
}
for (i in 1:100) {
births[i] <- 10
Fractions[i2] <- 50
pbtree(speciation rate = 10, extinction rate = 10/50, tips =100)
}
for (i in 1:100) {
births[i] <- 10
Fractions[i2] <- 50{}
pbtree(speciation rate = 10, extinction rate = 10/50, tips =100)
}
for (i in 1:100) {
births[i] <- 10
Fractions[i2] <- 50
pbtree("speciation rate" = 10, "extinction rate" = 10/50, tips =100)
}
for (i in 1:100) {
births[i] <- 10
Fractions[i] <- 50
pbtree("speciation rate" = 10, "extinction rate" = 10/50, tips =100)
}
for (i in 1:100) {
births[i] <- 10
Fractions[i] <- 50
speciation rate <- pbtree(births[i])
extinction rate <- pbtree(births[i]*Fractions[i])
}
for (i in 1:100) {
births[i] <- 10
Fractions[i] <- 50
speciation<- pbtree(births[i])
extinction<- pbtree(births[i]*Fractions[i])
}
for (i in 1:100) {
births[i] <- 10
Fractions[i] <- 50
speciation<- pbtree(births[i], tips=100)
extinction<- pbtree(births[i]*Fractions[i], tips=100)
}
for (i in 1:100) {
births[[i]] <- mean(i)
Fractions[[i]] <- median(i)
speciation<- pbtree(births[i], tips=100)
extinction<- pbtree(births[i]*Fractions[i], tips=100)
}
births <- vector(50)
Fractions <- vector(25)
for (i in 1:100) {
births[[i]] <- mean(i)
Fractions[[i]] <- median(i)
speciation<- pbtree(births[i], tips=100)
extinction<- pbtree(births[i]*Fractions[i], tips=100)
}
for (i in 1:100) {
births[[i]] <- mean(1:100)
Fractions[[i]] <- median(1:100)
speciation<- pbtree(births[i], tips=100)
extinction<- pbtree(births[i]*Fractions[i], tips=100)
}
?pbtree
for (i in 1:100) {
births[[i]] <- mean(i)
Fractions[[i]] <- median(i)
pbtree(b=1, d=0, n=mean(i), t=NULL, scale=NULL, nsim=1, type=c("continuous",
"discrete"), ...)
pbtree(b=0, d=1, n=median(i), t=NULL, scale=NULL, nsim=1, type=c("continuous",
"discrete"), ...)
}
for (i in 1:100) {
births[[i]] <- mean(i)
Fractions[[i]] <- median(i)
pbtree(b=1, d=0, n=75, t=NULL, scale=NULL, nsim=1, type=c("continuous",
"discrete"), ...)
pbtree(b=0, d=1, n=50, t=NULL, scale=NULL, nsim=1, type=c("continuous",
"discrete"), ...)
}
for (i in 1:100) {
births[[i]] <- mean(i)
Fractions[[i]] <- median(i)
pbtree(b=1, d=0, n=75, t=NULL, scale=NULL, nsim=1, type=c("continuous",
"discrete"), ...)
}
for (i in 1:100) {
births[[i]] <- mean(i)
Fractions[[i]] <- median(i)
pbtree(b=0.1, d=0.05, n=75, t=NULL, scale=NULL, nsim=100, type=c("continuous",
"discrete"), ...)
}
for (i in 1:100) {
births[[i]] <- mean(i)
Fractions[[i]] <- median(i)
speciation <- pbtree(b=0.1, d=0.05, n=75, t=NULL, scale=NULL, nsim=100, type=c("continuous",
"discrete"), ...)
}
for (i in 1:100) {
births[[i]] <- mean(i)
Fractions[[i]] <- median(i)
speciation <- pbtree(b=0.1, d=0.05, n=75, nsim=100, type=c("continuous",
"discrete"), ...)
}
trees <- list()
births <- vector()
Fractions <- vector()
for (i in 1:100) {
births[[i]] <- mean(births)
Fractions[[i]] <- median(Fractions)
speciation <- pbtree(b=0.1, d=0.05, n=75, nsim=100, type=c("continuous",
"discrete"), ...)
}
for (i in 1:100) {
births[[i]] <- 10
Fractions[[i]] <- 50
for (i in 1:100) {
births[[i]] <- 10
Fractions[[i]] <- 50
speciation <- pbtree(b=10, d=50, n=10, nsim=100, type=c("continuous",
"discrete"))
extinction <- pbtree(b=10, d=50, n=10*50, nsim=100, type=c("continuous", "discrete"))
}
trees <- list()
births <- vector()
Fractions <- vector()
for (i in 1:100) {
births[[i]] <- 10
Fractions[[i]] <- 50
speciation <- pbtree(b=10, d=50, n=10, nsim=100, type=c("continuous",
"discrete"))
extinction <- pbtree(b=10, d=50, n=10*50, nsim=100, type=c("continuous", "discrete"))
}
?barplot
setwd('C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\')
Dat1 <- read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data-Kaylea Stover.csv")
Dat2 <- read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data Mutations-Kaylea Stover.csv")
Dat3 <- read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data TP53-Kaylea Stover.csv")
Males <- as.matrix(Dat1[which(Dat1[,5]=="Male"),])
Females <- as.matrix(Dat1[which(Dat1[,5]=="Female"),])
library(vegan)
library(ggplot2)
library(plot3D)
library(grid)
library(R.devices)
library(dplyr)
WaterQuality<-read.csv(file="WaterQuality.csv", header=TRUE,sep=",")
#install.packages("vegan")
install.packages("ggplot2")
unlink(‘C:\\Users\\Kayle\\OneDrive\\Documents\\R\\win-library\\4.1/00LOCK’)
unlink("C:\\Users\\Kayle\\OneDrive\\Documents\\R\\win-library\\4.1/00LOCK")
install.packages("ggplot2")
install.packages("plot3D")
unlink("C:\Users\Kayle\OneDrive\Documents\R\win-library\4.1/00LOCK")
unlink("C:\\Users\\Kayle\\OneDrive\\Documents\\R\\win-library\\4.1//00LOCK")
install.packages("ggplot2")
install.packages("plot3D")
unlink("C:\\Users\\Kayle\\OneDrive\\Documents\\R\\win-library\\4.1/00LOCK = TRUE")
install.packages("ggplot2")
install.packages("plot3D")
install.packages("plot3D")
unlink(‘C:\Users\Kayle\OneDrive\Documents\R\win-library\4.1/00LOCK’)
unlink("C:\Users\Kayle\OneDrive\Documents\R\win-library\4.1/00LOCK")
unlink("C://Users//Kayle//OneDrive//Documents//R//win-library//4.1//00LOCK")
install.packages("ggplot2")
install.packages("plot3D")
install.packages("vegan")
install.packages("ggplot2")
install.packages("plot3D")
install.packages("ggplot2")
install.packages("plot3D")
BacterialDiversity<-read.csv(file="BacterialDiversity.csv", header=TRUE,sep=",")
DiversityTest<-lm(BacterialDiversity[,2]~BacterialDiversity[,1])
summary(DiversityTest)
#Step 2
summarystats<-BacterialDiversity %>% group_by(BacterialDiversity$Location) %>%
summarise(
Diversitymean = mean(Diversity)
)
summarystats
#Step 3
pdf(file="Bacterial Diversity Plot.pdf")
ggplot(BacterialDiversity, aes(BacterialDiversity[,1], BacterialDiversity[,2])) + geom_boxplot(aes(fill=factor(BacterialDiversity[,1]))) + theme_classic() +
scale_fill_manual(values = c("darkorange2", "dodgerblue2"))  + xlab("Sampling location") + ylab("Bacterial Diversity") + theme(legend.title = element_blank())
dev.off()
install.packages('meme')
library(meme)
if (.Platform$OS.type == "windows") {
windowsFonts(
Impact = windowsFont("Impact"),
Courier = windowsFont("Courier"))
}
u <- system.file("angry8.jpg", package="meme")
meme(u, "I Don't Know", "You Tell Me")
u2 <- system.file("success.jpg", package="meme")
x <- meme(u2, "I Don't Know","You Tell Me")
outfile <- tempfile(fileext=".png")
u2 <- "http://i0.kym-cdn.com/entries/icons/mobile/000/000/745/success.jpg"
x <- meme(u2, "please", "tell me more")
meme_save(x, file="docs/Figs/meme.png")
devtools::install_github("sctyner/memer")
install.packages('tidyverse')
library(memer)
library(tidyverse)
meme_get("Philosoraptor") %>%
meme_text_top("I Don't Know") %>%
meme_text_bottom("You tell Me")
head(monty_hall_results)
setwd('C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\')
# 1
x<-rnorm(100, mean = 5, sd=4)
var(x)
mean(x)
y<-((x*5)+2)+runif(100,0,0.1)
pdf('plot1.pdf', height = 4, width = 4)
plot(x,y)
abline(lm(y~x), col='red')
dev.off()
coef(lm(y~x))
# The y intercept is 2.046831 and the x intercept is 5.000675. These numbers are very close to the mean of 5 and variance of 4.
z <- c()
x <- rnorm(100, mean=5, sd=4)
for (i in 1:100) {
z[i] <- runif(1)
y <- (x * z[i]) + 2 + (rnorm(100, 0:0.1))
l <- coef(lm(z[1:100]~y))
}
pdf('plot2.pdf', height=4, width=4)
plot(z[1:100], y)
abline(lm(y~z[1:100]))
dev.off()
coef(lm(y~z))
pdf('plot3.pdf', height=4, width=4)
plot(c(z, -0.3754))
dev.off()
#2
install.packages("ggplot")
library(ggplot2)
iter<-10000
doors<-c("goat", "goat", "car")
monty_hall<-function(iteration){
contestant_door<-sample(doors,size=iteration,replace=TRUE)
i=1:iteration
stick_win<-ifelse(contestant_door=='car',1,0)
switch_win<-ifelse(contestant_door=='car',0,1)
stick_prob<-cumsum(stick_win)/i
switch_prob<-cumsum(switch_win)/i
results<-data.frame(i=i,contestant_door=contestant_door,
stick_win=stick_win,switch_win=switch_win,
stick_prob=stick_prob, switch_prob=switch_prob)
return(results)
}
monty_hall_results<- monty_hall(iter)
summary<-table(monty_hall_results$contestant_door)
summary
head(monty_hall_results)
barplot(c(sum(as.numeric(stick_win[,2])),sum(as.numeric(switch_win[,3]))), beside=TRUE, xlab='switch',ylab='stick')
barplot(c(sum(as.numeric(monty_hall_results$stick_win[,2])),sum(as.numeric(monty_hall_results$switch_win[,3]))), beside=TRUE, xlab='switch',ylab='stick')
class(monty_hall_results)
barplot(c(sum(as.numeric(monty_hall_results$stick_win)),sum(as.numeric(monty_hall_results$switch_win))), beside=TRUE, xlab='switch',ylab='stick')
install.packages('meme')
library(meme)
if (.Platform$OS.type == "windows") {
windowsFonts(
Impact = windowsFont("Impact"),
Courier = windowsFont("Courier"))
}
pdf('meme', height=4, width=4)
u <- system.file("angry8.jpg", package="meme")
meme(u, "I Don't Know", "You Tell Me")
dev.off()
install.packages("meme")
library(meme)
if (.Platform$OS.type == "windows") {
windowsFonts(
Impact = windowsFont("Impact"),
Courier = windowsFont("Courier"))
}
pdf('meme', height=4, width=4)
u <- system.file("angry8.jpg", package="meme")
meme(u, "I Don't Know", "You Tell Me")
dev.off()
meme_save(x, file=outfile)
library(meme)
if (.Platform$OS.type == "windows") {
windowsFonts(
Impact = windowsFont("Impact"),
Courier = windowsFont("Courier"))
}
u <- system.file("angry8.jpg", package="meme")
meme(u, "I Don't Know", "You Tell Me")
meme_save(x, file=outfile)
