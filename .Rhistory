barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "="~.(Chisq)), legend.text=c("expected", "observed"))
Observed <- c(2, 3, 10, 30)
Chisq <- sum(((Expectation - Observed) ^ 2) / Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "="~.(Chisq)), legend.text=c("expected", "observed"))
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors = F)
counts <- results[,c("yellow", "red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "Green", "Blue", "Black")
backgroundCol <- c("white","#d53e4f","#fee08b","#abdda4","#3288bd","black")
calcChi(counts[1.])
Chiqs <- apply(counts, 1, calcChi)
plotChis(counts)
plotChis(counts)
plotChiqs(counts)
plotChisqs(counts)
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
Avg <- mean(Chisqs)
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
propSig <- length(which(Chiqs > 11.70))/length(Chisqs)
percSig <- round(100 * propSig)
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
plot(1, 1, xlim=c(0, 400), ylim=c(1, 8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at = 1:length(backgrounds), labels = backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
counter <- 1
for(i in backgrounds)
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
abline(v = 11.70, lty=2, lwd =2, col='black')
Simulation <- sinDraws(10000)
Simulation <- simDraws(10000)
addHist(Y=7, Dat=Simulation, Color="lightgray")
mtext(side=2, at=7, line=0, "simulated")
abline(v = 11.70, lty=2, lwd=2)
Fit <- c(1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation2, Color=rgb(0, 0, 0, 0.25))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit) <- 1:6
Simulation3 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation3, Color=rgb(0, 0, 0, 0.25))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit) <- 1:6
Simulation4 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation4, Color=rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation5, Color=rgb(0, 0, 0, 0.25))
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit) <- 1:6
Simulation6 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation6, Color=rgb(0, 0, 0, 0.25))
mtext(side=2, at=8, line=0, "sel.sim.")
Simulation6 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)
addHist(Y=8, Dat=Simulation7, Color=rgb(0, 0, 1, 0.25))
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)
addHist(Y=8, Dat=Simulation7, Color=rgb(0, 0, 1, 0.25))
n.sims <- 1000
n.color <- rbinom(n.sims, 1000, 0.25)
hist(n.color)
if("offspring" different color than "parent")
if(offspring different color than parent)
if(offspring different color than parent){}
simPop(Popsize=100, nGenerations=100, h=1, s=0, initial_p=0.5, mu = 0, twoway = TRUE, w = NULL)
color <- c("offspring", "parent") size=100 replace=TRUE prop=c(1/2, 1/2)
color <- c("offspring", "parent"), size=100, replace=TRUE, prop=c(1/2, 1/2)
color <- c(offspring, parent), size=100, replace=TRUE, prop=c(1/2, 1/2)
color <- c(offspring parent), size=100, replace=TRUE, prop=c(1/2, 1/2)
color <- c(offspring, parent) size=100, replace=TRUE, prop=c(1/2, 1/2)
color <- c(offspring, parent) Popsize=100, replace=TRUE, prop=c(1/2, 1/2)
for(i in 1:100)
for(i in 1:100){
if(color[i]=="")
Observed <- c(15, 15, 5, 5)
Observed <- c(15, 15, 5, 5)
View(makeGamete)
Expectation <- c(10, 10, 10, 10)
Expectation <- c(10, 10, 10, 10)
Observed <- c(15, 15, 5, 5
Expectation <- c(10, 10, 10, 10)
Expectation <- c(10, 10, 10, 10)
Observed <- c(40, 40, 40, 40)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "="~.(Chisq)), legend.text=c("expected", "observed"))
Expectation <- c(10, 10, 10, 10)
Chisq <- sum(((Expectation - Observed) ^ 2) / Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "="~.(Chisq)), legend.text=c("expected", "observed"))
Observed <- c(40, 40, 40, 40)
Chisq <- sum(((Expectation - Observed) ^ 2) / Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "="~.(Chisq)), legend.text=c("expected", "observed"))
Avg <- mean(Chisqs)
Pop1 <- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h = 1, s = 0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd = 2, bty="n")
plotFit(nruns = 10, n = 50, ngens = 100, init_p = 0.5, h = 1, s = 0)
Expectation <- c(10, 10, 10, 10)
Observed <- c(15, 15, 5, 5)
Chisq <- sum(((Expectation - Observed) ^ 2) / Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "="~.(Chisq)), legend.text=c("expected", "observed"))
Observed <- c(5, 0, 0, 35)
Chisq <- sum(((Expectation - Observed) ^ 2) / Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "="~.(Chisq)), legend.text=c("expected", "observed"))
Observed <- c(2, 3, 10, 30)
Chisq <- sum(((Expectation - Observed) ^ 2) / Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "="~.(Chisq)), legend.text=c("expected", "observed"))
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors = F)
counts <- results[,c("yellow", "red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "Green", "Blue", "Black")
backgroundCol <- c("white","#d53e4f","#fee08b","#abdda4","#3288bd","black")
calcChi(counts[1.])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
Avg <- mean(Chisqs)
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
propSig <- length(which(Chiqs > 11.70))/length(Chisqs)
percSig <- round(100 * propSig)
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
plot(1, 1, xlim=c(0, 400), ylim=c(1, 8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at = 1:length(backgrounds), labels = backgrounds)
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
percSig <- round(100 * propSig)
for(i in backgrounds)
Data <- Chisqs[which(results[,3] ==i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
abline(v = 11.70, lty=2, lwd =2, col='black')
addHist(Y=7, Dat=Simulation, Color="lightgray")
mtext(side=2, at=7, line=0, "simulated")
abline(v = 11.70, lty=2, lwd=2)
Fit <- c(1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation2, Color=rgb(0, 0, 0, 0.25))
addHist(Y=8, Dat=Simulation2, Color=rgb(0, 0, 0, 0.25))
Fit <- c(1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation2, Color=rgb(0, 0, 0, 0.25))
learnPopGen:
coalescent.plot()
learnPopGen
library(learnPopGen)
install.packages("learnPopGen")
install.packages("learnPopGen")
install.packages("learnPopGen")
install.packages("learnPopGen")
library(learnPopGen)
coalescent.plot()
install.packages("coala")
library(coala)
install.Rtools(check = TRUE, check_r_update = TRUE, GUI = TRUE, ...)
install.Rtools()
install.packages("learnPopGen")
install.packages("learnPopGen")
install.packages("learnPopGen")
library(learnPopGen)
coalescent.plot()
install.packages("coala")
library(coala)
library(learncoala)
install.packages("phytools")
install.packages("phytools")
library(phytools)
library(ape)
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2)
model <- coal_model(sample_size = 5, loci_number = 10, loci_length =
500, ploidy = 2) +
feat_mutation(10) +
feat_recombination(10) +
sumstat_trees() +
sumstat_nucleotide_div()
install.packages("rehh", dep=T)
install.packages("assertthat", dep=T)
install.packages("RcppArmadillo", dep=T)
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("learnPopGen")
library(learnPopGen)
coalescent.plot()
install.packages("rehh", dep=T)
install.packages("assertthat", dep=T)
install.packages("RcppArmadillo", dep=T)
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/coala/coala_0.6.0.tar.gz", repos=NULL, type="source")
model <- coal_model(sample_size = 5, loci_number = 10, loci_length =
500, ploidy = 2) +
feat_mutation(10) +
sumstat_trees() +
sumstat_nucleotide_div()
model <- coal_model(sample_size = 5, loci_number = 10, loci_length = 500, ploidy = 2) + feat_mutation(10) + sumstat_trees() + sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
library(coala)
model <- coal_model(sample_size = 5, loci_number = 10, loci_length =
500, ploidy = 2) +
feat_mutation(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
Diversity <- stats$pi
Diversity <- stats$pi
library(coala)
model <- coal_model(sample_size = 5, loci_number = 10, loci_length =
500, ploidy = 2) +
feat_mutation(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
Diversity <- stats$pi
Nloci <- length(stats$trees)
t1 <- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
tl <- read.tree(text=stats$trees[[1]][1])
plot(tl)
axisPhylo()
tl <- read.tree(text=stats$trees[[l]][l])
plot(tl)
axisPhylo()
library(read.tree)
Agel <- max(nodeHeights(t1))
t2 <- read.tree(text=stats$trees[[2]][1])
read.tree(file = "", text = NULL, tree.names = NULL, skip = 0, comment.char = "", keep.multi = FALSE, ...)
install.packages("ape")
install.packages("ape")
library(ape)
Nloci <- length(stats$trees)
t1 <- read.tree(text=stats$trees[[1]][1])
plot(t1)
axisPhylo()
Agel <- max(nodeHeights(t1))
t2 <- read.tree(text=stats$trees[[2]][1])
plot(t2)
axisPhylo()
par(mfrow=c(1,2))
plot(t1)
plot(t2)
axisphylo()
compare.chronograms(t1, t2)
t1_1 <- read.tree(text=stats$trees[[1]][1])
t1_2 <- read.tree(text=stats$trees[[1]][2])
compare.chronograms(t1_, t1_2)
install.packages("learnPopGen")
library(learnPopGen)
coalescent.plot()
install.packages("rehh", dep=T)
install.packages("assertthat", dep=T)
install.packages("RcppArmadillo", dep=T)
install.packages("https://cran.r-project.org/src/contrib/Archive/scrm/scrm_1.7.3-1.tar.gz", repos=NULL, type="source")
for(locus in 1:Nloci) {
ntrees <- length(stats$trees[[locus]])
for(n in 1:ntrees){
if(locus ==1 && n == 1){
outPhy <- read.tree(text=stats$trees[[locus]][n])
}
else {
outPhy <- ape:::c.phylo(outPhy, read.tree(text=stats$trees[[locus]]))
outPhy <- ape:::c.phylo(outPhy, read.tree(text=stats$trees[[locus
]][n]))
}
}
}
par(mfrow=c(1,1))
densityTree(outPhy)
model3 <- coal_model(10, 50)+
feat_mutation(par_prior("theta", sample.int(100, 1)))+
sunstat_nucleotide_div()
stats <- simulate(model3, nsim = 40)
mean_pi <- sapply(stats, function(x)mean(x$pi))
theta <- sapply(stats, function(x)x$pars[["theta"]])
model <- coal_model(sample_size = 5, loci_number = 10, loci_length =
500, ploidy = 2) +
recombination_rate(10) +
sumstat_trees() +
sumstat_nucleotide_div()
stats <- simulate(model, nsim = 1)
mean_pi <- sapply(stats, function(x)mean(x$pi))
theta <- sapply(stats, function(x)x$pars[["theta"]])
compare.chronograms(mean_pi, theta)
install.packages("learnPopGen")
library(learnPopGen)
coalescent.plot()
Nloci <- length(stats$trees)
install.packages("ape")
library(ape)
t1 <- read.tree(text=stats$trees[[1]][1])
plot(t1)
install.packages("ape")
Agel <- max(nodeHeights(t1))
t2 <- read.tree(text=stats$trees[[2]][1])
plot(t2)
axisPhylo()
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
source("http://jonsmitchell.com/code/simFxn.R")
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(0, 1))
s <- apply(overallFreq, 2, function(x) lines(overallFreq[1,], x, col=rgb(0, 0, 0, 0.01)))
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(0, 1))
s <- apply(overallFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0, 0, 0, 0.01)))
rescaleFreq <- apply(overallFreq[,3:ncol(overallFreq)], 2, function(x)x-v[1])
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))
s <- apply(rescaleFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0.01)))
rescaleFreq <- apply(overallFreq[,3:ncol(overallFreq)], 2, function(x)x-x[1])
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))
s <- apply(rescaleFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0.01)))
for(i in 3:ncol(overallFreq)) {
dYear <- c(dYear, overallFreq[,1])
Vec <- overallFreq[,i]
Init <- overallFreq[1, i]
dAlleles <- c(dAlleles, Vec - Init)
}
dYear <- c()
dAlleles <- c()
for(i in 3:ncol(overallFreq)) {
dYear <- c(dYear, overallFreq[,1])
Vec <- overallFreq[,i]
Init <- overallFreq[1, i]
dAlleles <- c(dAlleles, Vec - Init)
}
smoothScatter(dYear, dAlleles, colramp = Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=100, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
plot(alleleFreqs$d_freq, alleleFreqs$d_imm, xlim=c(-0.15, 0.15), xlab="overall freq. change", ylab="freq. change in subset")
points(alleleFreqs$d_freq, alleleFreqs$d_birth, col='blue')
points(alleleFreqs$d_freq, alleleFreqs$d_surv, col='red')
source("https://discovery.ebsco.com/c/y2m5o4/viewer/pdf/oillz5fr5b")
source("https://discovery.ebsco.com/c/y2m5o4/viewer/pdf/oillz5fr5b")
thepage = readLines("https://discovery.ebsco.com/c/y2m5o4/viewer/pdf/oillz5fr5b")
source("paleodb.org")
source("paleodb.org")
dataRDS <- readRDS("paleobd.org")
source("http://jonsmitchell.com/code/paleodb.org")
setwd('C:\\Documents\\Biology 461')
setwd('C:\\Desktop\\evolution\\Task\\Task_07')
data1 <- read.csv("C:\\Users\\Kaylea\\Desktop\\Cheloniodea data measurements.csv", header=TRUE, stringsAsFactors=FALSE)
data1 <- read.csv("C:\\Kaylea\\Desktop\\Cheloniodeadatameasurements.csv", header=TRUE, stringsAsFactors=FALSE)
setwd('C:/Users/Kaylea Stover/Documents')
setwd("C:/Users/Kaylea Stover/Documents")
data <- read.csv("Chelonioidea data measurements.csv",1)
data2 <- read.csv("Chelonioidea data diversity overtime.csv",2)
data3 <- read.csv("Chelonioidea data geographic.csv",3)
library()
install.packages("Chelonioidea data measurements.csv")
data <- read.csv("Chelonioidea data measurements.csv",1)
data2 <- read.csv("Chelonioidea data diversity overtime.csv",2)
data3 <- read.csv("Chelonioidea data geographic.csv",3)
setwd('C:\\Desktop\\Evolution\\Task\\Project')
setwd('C:\\Desktop\\Evolution\\Tasks\\Project')
setwd('C:\\Desktop\\Evolution\\Project')
setwd('C:\\OneDrive\\Desktop\\Evolution\\Project')
setwd('C:\\OneDrive\\Desktop\\Evolution\\Tasks\\Project')
setwd('C://Desktop//Evolution//Tasks//Project')
setwd('C://Desktop//Evolution//Tasks/Project')
setwd("C://Desktop//Evolution//Tasks/Project")
setwd('/Users/stover/Desktop/Evolution/Tasks/Project')
data4 <- read.csv("Elephantidae measurements.csv",1)
data5 <- read.csv("Elephantidae Occurrences.csv",2)
data4 <- read.csv("Elephantidae measurements.csv",4)
data5 <- read.csv("Elephantidae Occurrences.csv",5)
data4 <- read.csv("Elephantidae measurements.csv",4)
data5 <- read.csv("Elephantidae Occurrences.csv",5)
data5 <- read.csv("Elephantidae Occurrences.csv",5)
data1 <- read.csv("Chelonioidea data occurrences.csv",1)
data1 <- read.csv("Chelonioidea data occurrences.csv",4)
data1 <- read.csv("Chelonioidea data occurrences.csv")
setwd('C://Desktop//Evolution//Tasks//Project')
install.packages(Elephantidae measurements.csv)
install.packages(Elephantidae measurements)
install.packages("Elephantidae measurements)
install.packages("Elephantidae measurements")
install.packages(Elephantidae measurements)
data1 <- read.csv("Elephantidae measurements.csv",1)
data2 <- read.csv("Elephantidae Occurrences.csv",2)
data2 <- read.csv("Elephantidae Occurrences.csv",2)
data <- read.csv("Chelonioidea data measurements.csv",1)
data <- read.csv("Chelonioidea data occurrences.csv",1)
data2 <- read.csv("Chelonioidea data occurrences.csv",2)
source("http://paleobiodb.org/data1.2/specs/measurements.csv?datainfo&rowcount&base_name=Chelonioidea&taxon_reso=species&ident=all")
source(http://paleobiodb.org/data1.2/specs/measurements.csv?datainfo&rowcount&base_name=Chelonioidea&taxon_reso=species&ident=all)
source(http:/paleobiodb.org/data1.2/specs/measurements.csv?datainfo&rowcount&base_name=Chelonioidea&taxon_reso=species&ident=all)
source(http:paleobiodb.org/data1.2/specs/measurements.csv?datainfo&rowcount&base_name=Chelonioidea&taxon_reso=species&ident=all)
source(http:paleobiodb.org/data1.2/specs/measurements.csv?datainfo&rowcount&base_name=Chelonioidea&taxon_reso=species&identall)
source(http:paleobiodb.org/data1.2/specs/measurements.csv?datainfo&rowcount&base_nameChelonioidea&taxon_reso=species&identall)
source(http:paleobiodb.org/data1.2/specs/measurements.csv?datainfo&rowcount&base_nameChelonioidea&taxon_resospecies&identall)
source(http://creativecommons.org/licenses/by/4.0/)
source(http://paleobiodb.org/data1.2/occs/list_doc.html)
install.packages("devtools")
devtools::install_github("ebird/auk")
install.packages("auk")
library(ape)
library(phytools)
library(ape)
library(phytools)
text.strings<-
"(((((((cow,pig), whale),(bat,(lemur,human))),(robin,iguana)), coelacanth
),(gold_fish,trout)),shark);"
vert.tree<- read.tree(text=text.string)
plot(vert.tree,edge.width=2)
text.strings<-"(((((((cow,pig), whale),(bat,(lemur,human))),(robin,iguana)), coelacanth),(gold_fish,trout)),shark);"
vert.tree<- read.tree(text=text.string)
plot(vert.tree,edge.width=2)
text.string<-
"(((((((cow, pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth"
"(((((((cow, pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth"),(gold_fish,trout)),shark);"
"(((((((cow, pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree,edge.width=2)
vert.tree<-read.tree(text=text.string)
plot(vert.tree, edge.width=2)
plot(vert.tree , edge.width=2)
install.packages(ape)
"ape"
install.packages("ape")
install.packages("ape")
library(ape)
install.packagess("phytools")
install.packages("phytools")
library(phytools)
text.string <-
"(((((((cow, pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle",bg='white',cex=1)
vert.tree
str(vert.tree)
tree <- read.tree(text="(((A.B),(C,D)),E);")
plotTree(tree,offset=1)
tiplabels(frame="circle",bg='lightblue',cex=1)
nodelabels(frame="circle", bg='white',cex=1)
tree$tip.label
tree!tiplabel
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tree"))
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length,col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50),xlim=c(0,6))
tipEdges<-which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths<-AnolisTree$edge.length
names(Lengths) <- AnolisTree$tip.label
names(Lengths)[which(Lengths == min(Lengths))]
plot(AnolisTree,cex=0.25)
Labs<-sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
plot(x, type = "phylogram", use.edge.length = TRUE,
node.pos = NULL, show.tip.label = TRUE,
show.node.label = FALSE, edge.color = NULL, edge.width
= NULL, edge.lty = NULL, node.color = NULL, node.width
= NULL, node.lty = NULL, font = 3, cex = par("cex"),
adj = NULL, srt = 0, no.margin = FALSE, root.edge =
FALSE, label.offset = 0, underscore = FALSE, x.lim =
NULL, y.lim = NULL, direction = "rightwards", lab4ut =
NULL, tip.color = par("col"), plot = TRUE, rotate.tree
= 0, open.angle = 0, node.depth = 1, align.tip.label =
FALSE, ...)
plot(tree)
plot(tree, tiplabels=NULL)
plot(tree, tiplabels=FALSE)
plot(tree, tiplabel=NULL)
plot(obj, type="fan")
plot(tree, type="fan")
plot(phylo, type="fan")
tiplabels(bg='red' cex=1)
tiplabels(frame="square", bg='red')
tiplabels(frame="rect", bg='red')
Tree <- sapply(tree$edge.length)
Tree <- sapply(tree$edge.length, round, digits=2)
tiplabels = FALSE
plot(tree, tiplabels=FALSE)
NewAnolisTree<-drop.tip()
Tree<-drip.tip()
Tree<-drop.tip()
Tree<-drop.tip(phylo)
Tree<-drop.tip(length)
plot(AnolisTree, tiplabels=FALSE)
plot(AnolisTree, cex=0.25, type='radial')
plot(AnolisTree, cex=0.25, tip.color='red')
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length,round,digits=2)
edgelabels(text=Labs, cex=0.25)
which(Lengths == min(Lengths))
names(Lengths)
AnolisTree2 <- drop.tip(AnolisTree, 'Anolis_occultus')
plot(AnolisTree2, cex=0.25)
ltt(AnolisTree)
abline(0, 1, lwd=2, col='red', lty=2)
fit.bd(AnolisTree, b, d, rho=0.2)
(b/lamda=0.8031), (d/mu=0), and log(L)=132.9163
setwd('C://Desktop//Evolution//Task//Project')
setwd('C:\\Desktop\\Evolution\\Task\\Project')
data <- read.csv("Cancer Data-Kaylea Stover")
read.csv(file="C:\Users\Kayle\OneDrive\Desktop\Evolution\Tasks\Project\Cancer Data-Kaylea Stover.csv")
read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data-Kaylea Stover.csv")
setwd("C:\\Users\\Kayle\\AppData\\Local\\Temp\\RtmpuI0Z44\\downloaded_packages")
read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data-Kaylea Stover.csv")
setwd('C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data-Kaylea Stover')
read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data-Kaylea Stover.csv")
setwd("C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data-Kaylea Stover")
read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data-Kaylea Stover.csv")
read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data Mutations-Kaylea Stover.csv")
setwd('C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data-Kaylea Stover')
read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data-Kaylea Stover.csv")
read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data Mutations-Kaylea Stover.csv")
read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data-Kaylea Stover.csv")
read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data-Kaylea Stover.csv")
read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data Mutations-Kaylea Stover.csv")
read.csv(file="C:\\Users\\Kayle\\OneDrive\\Desktop\\Evolution\\Tasks\\Project\\Cancer Data TP53-Kaylea Stover.csv")
